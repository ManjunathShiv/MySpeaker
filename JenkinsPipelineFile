#!/usr/bin/env groovy

def teamEmailList ='manjunath.shivakumara@philips.com'
def devTeamEmailList = 'manjunath.shivakumara@philips.com'
def errors = []
def shouldSkip = false

node {
  try {

stage('Checkout GitLab CodeBase') {
def jobBaseName = "${env.JOB_BASE_NAME}".replace('%2F', '/')
if (env.BRANCH_NAME != jobBaseName)
{
echo "ERROR: Branches DON'T MATCH"
echo "Branchname  = " + env.BRANCH_NAME
echo "jobBaseName = " + jobBaseName
exit 1
}
echo "Branchname  = " + env.BRANCH_NAME
checkout([$class: 'GitHub', branches: [[name: '*/'+env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'WipeWorkspace'], [$class: 'LocalBranch'], [$class: 'MessageExclusion', excludedMessage: '.*\\[skip ci\\]|\\[ci skip\\].*']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GitHub', url: 'https://github.com/ManjunathShiv/MySpeaker.git']]])
}

      stage('Ensure Git Clean') {

      }

      stage('Should Skip CI') {

      }

      stage('CI Execution StartTime') {

      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Ensure Git Branch') {
        }
      }

      stage('Ensure Xcode Version') {

      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Bump Version') {
        }
      }

      stage('iOS10 Run TestCases') {

      }

      stage('iOS10 Test Execution Report') {

      }

      if (env.BRANCH_NAME == 'develop') {
        stage('iOS10 Update TestCases Result') {

        }
      }

      if (env.BRANCH_NAME == 'develop') {
        stage('iOS11 Run TestCases') {

        }

        stage('iOS11 Test Execution Report') {

        }

        stage('iOS11 Update TestCases Result') {

        }
      }

      stage('Code Coverage') {

      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Build & Create Ipa(s)') {

        }
      }

      if (env.BRANCH_NAME == 'develop') {
        stage('HockeyApp Upload') {

        }
      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Add Git Tag') {

        }
      }

      stage('Release Notes') {
      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Commit ipa') {

        }
      }

      stage('Record Execution Time') {

      }

      stage('Commit Reports') {

      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Email Notification') {
          
        }
      }

      if (env.BRANCH_NAME == 'develop') {
        stage('Slack Notification') {

        }
      }
  } catch(err) {
      errors << "errors found: ${err}"
      stage('Email Notification on Fail') {
          echo "Send Email here."
          echo errors
      }
    } finally {
          stage('Cleaning workspace') {
              step([$class: 'WsCleanup', deleteDirs: true, notFailBuild: true])
          }
    }
}
